#Lab Report 2 - Servers and SSH Keys (Week 3)

``` 
import java.io.IOException;
import java.net.URI;

// Interface to handle URL requests
interface URLHandler {
    String handleRequest(URI url);
}

// Implementation of URLHandler for handling chat-related requests
class ChatHandler implements URLHandler {
    private String chatHistory = "";

   
    public String handleRequest(URI url) {
        if (url.getPath().equals("/add-message")) {
            String[] parameters = url.getQuery().split("&");


            if (parameters.length == 2) {
                String message = parameters[0].split("=")[1];
                String user = parameters[1].split("=")[1];
                chatHistory += user + ": " + message + "\n";
                return "Message added successfully: " + user + ": " + message;
            } else {
                return "Invalid request. Both 's' and 'user' parameters are required.";
            }
        }
        return chatHistory;
    }
}

// Main class to start the chat server
class ChatServer {
    public static void main(String[] args) throws IOException {
        if (args.length == 0) {
            System.out.println("Missing port number! Try any number between 1024 to 49151:");
            return;
        }

        int port = Integer.parseInt(args[0]);
        Server.start(port, new ChatHandler());
    }
}
```
